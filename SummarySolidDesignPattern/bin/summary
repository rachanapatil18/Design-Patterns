///////SOLID Design PATTERNS

Single Responsibilty Principle
- A class should only have one reason to change
- Separation of concerns- different classes handling different, independent tasks/problems
========================================================================================

Open Closed Principle
- Classes should be open for extension but closed for modification

============================================================================================

Liskov Substitution Principle
You should be able to substitute a base type for a subtype

=======================================================================================

Interface segregation Principle
- Dont put too much into an interface, split into separate interface
-YAGNI you Aint going to need it

===============================================================================================

Dependency Injection Principle
High level modules should not depend on low level module, use abstractions



